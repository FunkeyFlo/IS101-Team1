/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.manager;

import java.awt.BorderLayout;
import java.awt.Color;
import main.Main;
import org.jfree.chart.ChartFactory;
//import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Florentijn Cornet
 */
public class Manager extends javax.swing.JFrame {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        DefaultCategoryDataset lostBaggageGraph = new DefaultCategoryDataset();
        DefaultCategoryDataset foundBaggageGraph = new DefaultCategoryDataset();
        DefaultCategoryDataset returnedBaggageGraph = new DefaultCategoryDataset();
        final String[] MONTHS = {"Januari", "Februari", "Maart", "April", "Mei",
            "Juni", "Juli", "Augustus", "September", "Oktober", "November",
            "December"};

        //dummy data
        int[] lostBaggageList = {33, 6, 30, 48, 80, 18, 14, 71, 32, 23, 18, 19};
        int[] foundBaggageList = {6, 64, 20, 92, 32, 47, 85, 37, 22, 79, 35, 27};
        int[] returnedBaggageList = {17, 80, 60, 82, 100, 21, 40, 65, 63, 40, 83, 16};
        //names
        final String CHART_NAME = "Verloren, gevonden en afgehandelde baggage per maand";
        final String X_AXIS_NAME = "Maand";
        final String Y_AXIS_NAME = "Aantal";
    
    
    /**
     * Creates new form Gebruiker
     */
    public Manager() {
        initComponents();
        
        for (int i = 0; i < MONTHS.length; i++) {
            dataset.setValue(lostBaggageList[i], "Verloren", MONTHS[i]);
            dataset.setValue(foundBaggageList[i], "Gevonden", MONTHS[i]);
            dataset.setValue(returnedBaggageList[i], "Afgehandeld", MONTHS[i]);
            
            lostBaggageGraph.setValue(lostBaggageList[i], "Verloren", MONTHS[i]);
            
            foundBaggageGraph.setValue(foundBaggageList[i], "Gevonden", MONTHS[i]);
            
            returnedBaggageGraph.setValue(returnedBaggageList[i], "Afgehandeld", MONTHS[i]);
        }
        
        /**
         * ALL DATA GRAPH
         */
        JFreeChart chart = ChartFactory.createBarChart(CHART_NAME, X_AXIS_NAME, Y_AXIS_NAME, dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartPanel allGraphsPanel = new ChartPanel(chart);
        
        
        allGraphsTab.setLayout(new BorderLayout());
        allGraphsTab.add(allGraphsPanel, BorderLayout.CENTER);
        allGraphsTab.validate();
        
        /**
         * LOST BAGGAGE GRAPH
         */
        JFreeChart lostBaggageChart = ChartFactory.createBarChart("Verloren baggage", "Maand", "Verloren", lostBaggageGraph, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot lostBaggagePlot = lostBaggageChart.getCategoryPlot();
        lostBaggagePlot.setRangeGridlinePaint(Color.BLACK);
        ChartPanel lostBaggagePanel = new ChartPanel(lostBaggageChart);
        
        lostBaggage.setLayout(new BorderLayout());
        lostBaggage.add(lostBaggagePanel, BorderLayout.CENTER);
        lostBaggage.validate();
        
        /**
         * FOUND BAGGAGE GRAPH
         */
        JFreeChart foundBaggageChart = ChartFactory.createBarChart("Gevonden baggage", "Maand", "Gevonden", foundBaggageGraph, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot foundBaggagePlot = foundBaggageChart.getCategoryPlot();
        foundBaggagePlot.setRangeGridlinePaint(Color.BLACK);
        ChartPanel foundBaggagePanel = new ChartPanel(foundBaggageChart);
        
        foundBaggage.setLayout(new BorderLayout());
        foundBaggage.add(foundBaggagePanel, BorderLayout.CENTER);
        foundBaggage.validate();
        
        /**
         * RETURNED BAGGAGE GRAPH
         */
        JFreeChart returnedBaggageChart = ChartFactory.createBarChart("Afgehandelde baggage", "Maand", "Afgehandeld", returnedBaggageGraph, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot returnedBaggagePlot = returnedBaggageChart.getCategoryPlot();
        returnedBaggagePlot.setRangeGridlinePaint(Color.BLACK);
        ChartPanel returnedBaggagePanel = new ChartPanel(returnedBaggageChart);
        
        returnedBaggage.setLayout(new BorderLayout());
        returnedBaggage.add(returnedBaggagePanel, BorderLayout.CENTER);
        returnedBaggage.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        overviewPane = new javax.swing.JTabbedPane();
        allGraphsTab = new javax.swing.JPanel();
        lostBaggage = new javax.swing.JPanel();
        foundBaggage = new javax.swing.JPanel();
        returnedBaggage = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        userMenu = new javax.swing.JMenu();
        changePassword = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();

        jLabel1.setText("ingelogd als gebruiker");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout allGraphsTabLayout = new javax.swing.GroupLayout(allGraphsTab);
        allGraphsTab.setLayout(allGraphsTabLayout);
        allGraphsTabLayout.setHorizontalGroup(
            allGraphsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        allGraphsTabLayout.setVerticalGroup(
            allGraphsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        overviewPane.addTab("Alle data", allGraphsTab);

        javax.swing.GroupLayout lostBaggageLayout = new javax.swing.GroupLayout(lostBaggage);
        lostBaggage.setLayout(lostBaggageLayout);
        lostBaggageLayout.setHorizontalGroup(
            lostBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        lostBaggageLayout.setVerticalGroup(
            lostBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        overviewPane.addTab("Vermiste baggage", lostBaggage);

        javax.swing.GroupLayout foundBaggageLayout = new javax.swing.GroupLayout(foundBaggage);
        foundBaggage.setLayout(foundBaggageLayout);
        foundBaggageLayout.setHorizontalGroup(
            foundBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        foundBaggageLayout.setVerticalGroup(
            foundBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        overviewPane.addTab("Gevonden baggage", foundBaggage);

        javax.swing.GroupLayout returnedBaggageLayout = new javax.swing.GroupLayout(returnedBaggage);
        returnedBaggage.setLayout(returnedBaggageLayout);
        returnedBaggageLayout.setHorizontalGroup(
            returnedBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );
        returnedBaggageLayout.setVerticalGroup(
            returnedBaggageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        overviewPane.addTab("Afgehandelde baggage", returnedBaggage);

        userMenu.setText("Gebruiker");

        changePassword.setText("Wachtwoord wijzigen..");
        changePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordActionPerformed(evt);
            }
        });
        userMenu.add(changePassword);

        logout.setText("Uitloggen");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        userMenu.add(logout);

        menuBar.add(userMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(overviewPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(overviewPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordActionPerformed
        Main.displayChangeMyPassword();
    }//GEN-LAST:event_changePasswordActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        dispose();
        Main.displayLogin();
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manager().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel allGraphsTab;
    private javax.swing.JMenuItem changePassword;
    private javax.swing.JPanel foundBaggage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem logout;
    private javax.swing.JPanel lostBaggage;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTabbedPane overviewPane;
    private javax.swing.JPanel returnedBaggage;
    private javax.swing.JMenu userMenu;
    // End of variables declaration//GEN-END:variables
}